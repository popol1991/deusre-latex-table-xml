from bs4 import BeautifulSoup
from lxml import etree

def makerow(row, node, subnode, tag):
    ret = etree.Element(node)
    elemlist = row.find_all(tag)
    for elem in elemlist:
        sub = etree.Element(subnode)
        value = elem.get_text()
        sub.text = value.strip()
        ret.append(sub)
    return ret

def convert(path):
    """ Convert file in XML format generated by LateXML to XML format that can be indexed by DEUSRE """
    with open(path) as fin:
        xml = "".join(fin.readlines())
    xmltable = etree.Element('tables')
    soup = BeautifulSoup(xml)

    # empty
    xmltable.append(etree.Element("metadata"))
    xmltable.append(etree.Element('authors'))
    xmltable.append(etree.Element('keywords'))

    # article-title
    title = soup.find('title').get_text()
    xmltitle = etree.Element('article-title')
    xmltitle.text = title
    xmltable.append(xmltitle)
    # abstract
    abstract = soup.find('abstract').get_text()
    xmlabstract = etree.Element('abstract')
    xmlabstract.text = abstract
    xmltable.append(xmlabstract)

    for table_node in soup.findAll('table'):
        table = etree.Element('table')

        # caption
        caption = etree.Element('caption')
        caption.text = table_node.find('caption').get_text()
        table.append(caption)

        # empty footnote
        footnote = etree.Element('footnote')
        table.append(footnote)

        #empty context
        context = etree.Element('context')
        table.append(context)

        group = etree.Element('group')
        table.append(group)
        if table_node.thead is not None:
            headerlist = soup.thead.find_all('tr')
            for h in headerlist:
                headers = makerow(h, 'headers', 'header', 'th')
            group.append(headers)
        if table_node.tbody is not None:
            rowlist = soup.tbody.find_all('tr')
            for r in rowlist:
                row = makerow(r, 'row', 'value', 'td')
                group.append(row)

        xmltable.append(table)

    print etree.tostring(xmltable, pretty_print=True)

if __name__ == '__main__':
    convert("./test.xml")
